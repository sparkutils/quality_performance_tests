<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>  <!-- rebuild -->
    <groupId>com.sparkutils</groupId>
    <artifactId>quality_performance_tests_${qualityVersion}</artifactId>

    <version>${revision}</version>
    <name>Quality performance tests</name>
    <description>a collection of Quality perf tests</description>
    <url>https://github.com/sparkutils/quality_performance_tests/</url>
    <licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>https://github.com/sparkutils/quality_performance_tests/blob/master/LICENSE</url>
        </license>
    </licenses>
    <developers>
        <developer>
            <name>Chris Twiner</name>
        </developer>
    </developers>
    <scm>
        <connection>scm:git:git://github.com/sparkutils/quality_performance_tests.git</connection>
        <developerConnection>scm:git:ssh://github.com:sparkutils/quality_performance_tests.git</developerConnection>
        <url>https://github.com/sparkutils/quality_performance_tests/tree/master</url>
    </scm>

    <packaging>jar</packaging>
    <properties>
        <scalaVersion>2.12.18</scalaVersion>
        <scalaCompatVersion>2.12</scalaCompatVersion>

        <sparkVersion>3.5.5</sparkVersion>
        <sparkCompatVersion>3.5</sparkCompatVersion>
        <shimRuntime>4.0.0.oss</shimRuntime>
        <jacksonVersion>2.13.5</jacksonVersion>
        <scalaMeterVersion>0.0.1</scalaMeterVersion>

        <junitVersion>4.12</junitVersion>
        <scalatestVersion>3.0.7</scalatestVersion>
        <qualityVersion>0.1.3.1-RC5-SNAPSHOT</qualityVersion>


        <revision>0.0.1-SNAPSHOT</revision>

        <mavenProjectInfoReportsPluginVersion>3.4.5</mavenProjectInfoReportsPluginVersion>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <dependencyPluginVersion>3.1.1</dependencyPluginVersion>
        <scalaCompilerPluginVersion>4.8.0</scalaCompilerPluginVersion>
        <mavenCompilerPluginVersion>3.8.1</mavenCompilerPluginVersion>
        <mavenJarPluginVersion>3.2.0</mavenJarPluginVersion>
        <mavenFlattenPluginVersion>1.2.7</mavenFlattenPluginVersion>
        <mavenSitePluginVersion>3.7.1</mavenSitePluginVersion>
        <mavenProjectInfoReportsVersion>3.1.1</mavenProjectInfoReportsVersion>
        <mavenAssemblyPluginVersion>2.5.3</mavenAssemblyPluginVersion>
        <scalaCrossPluginVersion>0.3.0</scalaCrossPluginVersion>
        <slf4jVersion>1.7.32</slf4jVersion>
        <shapeless>2.3.10</shapeless>
        <nakedFSVersion>0.1.0</nakedFSVersion>

        <!-- needed for scoverage -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <scalatestMavenPluginVersion>2.2.0</scalatestMavenPluginVersion>

        <scalacArg1></scalacArg1>
        <scalacArg2></scalacArg2>

    </properties>

    <distributionManagement>
        <repository>
            <id>ossrh</id>
            <name>Quality Release Repository</name>
            <url>https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>
        <snapshotRepository>
            <id>ossrh</id>
            <name>Quality Snapshot Repository</name>
            <url>https://s01.oss.sonatype.org/content/repositories/snapshots/</url>
        </snapshotRepository>
    </distributionManagement>

    <dependencies>

        <dependency>
            <groupId>com.globalmentor</groupId>
            <artifactId>hadoop-bare-naked-local-fs</artifactId>
            <version>${nakedFSVersion}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.apache.hadoop</groupId>
                    <artifactId>hadoop-commons</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junitVersion}</version>
        </dependency>
        <dependency>
            <groupId>com.sparkutils</groupId>
            <artifactId>scalameter_shaded_${scalaCompatVersion}</artifactId>
            <version>${scalaMeterVersion}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.mongodb</groupId>
                    <artifactId>casbah_${scalaCompatVersion}</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>com.sparkutils</groupId>
            <artifactId>quality_3.5.0.oss_3.5_2.12</artifactId>
            <version>${qualityVersion}</version>
            <classifier>tests</classifier>
        </dependency>
        <dependency>
            <groupId>com.sparkutils.</groupId>
            <artifactId>quality_3.5.0.oss_3.5_2.12</artifactId>
            <version>${qualityVersion}</version>
        </dependency>
        <dependency>
            <groupId>org.scalatest</groupId>
            <artifactId>scalatest_${scalaCompatVersion}</artifactId>
            <version>${scalatestVersion}</version>
        </dependency>

<!--
        <dependency>
            <groupId>com.sparkutils</groupId>
            <artifactId>shim_runtime_${shimRuntime}_${sparkCompatVersion}_${scalaCompatVersion}</artifactId>
            <version>${shimVersion}</version>
        </dependency>
        -->
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
            <version>${scalaVersion}</version>
        </dependency>
        <!-- conflicting slf4j-api from avro via core, this forces there right one -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4jVersion}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-core_${scalaCompatVersion}</artifactId>
            <version>${sparkVersion}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-sql_${scalaCompatVersion}</artifactId>
            <version>${sparkVersion}</version>
        </dependency>


        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-scala_${scalaCompatVersion}</artifactId>
            <version>${jacksonVersion}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jacksonVersion}</version>
        </dependency>

    </dependencies>

    <build>
        <testResources>
            <testResource>
                <directory>${project.basedir}/../src/test/resources</directory>
                <filtering>true</filtering>
            </testResource>
        </testResources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${mavenCompilerPluginVersion}</version>
                <configuration>
                    <source>8</source>
                    <target>8</target>
                </configuration>
            </plugin>

            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
                <version>${scalaCompilerPluginVersion}</version>
                <executions>
                    <execution>
                        <id>scala-compile</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>doc-jar</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>scala-test-compile</id>
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>

                <configuration>
                    <args>
                        <arg>-feature</arg>
                        <arg>-deprecation</arg>
                        <!--<arg>-Xelide-below</arg>
                        <arg>${elidebelow}</arg>-->
                        <arg>-dependencyfile</arg>
                        <arg>${project.build.directory}/.scala_dependencies</arg>
                        <arg>-g:vars</arg>
                        <arg>-language:implicitConversions</arg>
                        <arg>-language:postfixOps</arg>
                        <arg>-language:existentials</arg>
                        <arg>-language:higherKinds</arg>
                        <arg>-Xfuture</arg>
                        <arg>${scalacArg1}</arg>
                        <arg>${scalacArg2}</arg>
                        <arg>-nobootcp</arg>
                    </args>
                    <recompileMode>all</recompileMode>
                    <scalaCompatVersion>${scalaCompatVersion}</scalaCompatVersion>

                    <compilerPlugins>
                        <compilerPlugin>
                            <groupId>org.typelevel</groupId>
                            <artifactId>kind-projector_${scalaVersion}</artifactId>
                            <version>0.13.3</version>
                        </compilerPlugin>
                    </compilerPlugins>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <version>${mavenSitePluginVersion}</version>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>3.2.0</version>
                <executions>
                    <execution>
                        <id>add-source</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>${project.basedir}/../src/main/scala</source>
                            </sources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>for-scaladocs-etc</id>
                        <phase>pre-site</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>${project.basedir}/../src/main/scala</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>${mavenProjectInfoReportsPluginVersion}</version>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>${mavenJarPluginVersion}</version>
                <configuration>
                    <archive>
                        <manifestEntries>
                            <Build-Time>${maven.build.timestamp}</Build-Time>
                        </manifestEntries>
                        <manifestSections>
                            <manifestSection>
                                <name>Versions</name>
                                <manifestEntries>
                                    <Project-Version>${project.version}</Project-Version>
                                    <Project-Git-Hash>${GITHUB_SHA}</Project-Git-Hash>
                                    <Project-CI-Branch>${GITHUB_BASE_REF}</Project-CI-Branch>
                                    <Project-CI-Run-ID>${GITHUB_RUN_ID}</Project-CI-Run-ID>
                                    <Project-URL>${GITHUB_REPOSITORY}</Project-URL>
                                </manifestEntries>
                            </manifestSection>
                        </manifestSections>
                    </archive>
                    <excludes>
                        <!-- many dbr requires faking the source, we should not include the output -->
                        <exclude>org/apache/spark/sql/catalyst/**</exclude>
                        <exclude>org/apache/spark/sql/internal/**</exclude>
                        <!-- shouldn't be there, really bad for multi-module projects -->
                        <exclude>log4j2.xml</exclude>
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
                <version>${mavenFlattenPluginVersion}</version>
                <configuration>
                    <flattenMode>oss</flattenMode>
                </configuration>
                <executions>
                    <!-- enable flattening -->
                    <execution>
                        <id>flatten</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>flatten</goal>
                        </goals>
                    </execution>
                    <!-- ensure proper cleanup -->
                    <execution>
                        <id>flatten.clean</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-gpg-plugin</artifactId>
                <version>3.0.1</version>
                <executions>
                    <execution>
                        <id>sign-artifacts</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>sign</goal>
                        </goals>
                        <configuration>
                            <!-- Prevent gpg from using pinentry programs -->
                            <gpgArguments>
                                <arg>--pinentry-mode</arg>
                                <arg>loopback</arg>
                            </gpgArguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>2.2.1</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.sonatype.plugins</groupId>
                <artifactId>nexus-staging-maven-plugin</artifactId>
                <version>1.6.13</version>
                <extensions>true</extensions>
                <configuration>
                    <serverId>ossrh</serverId>
                    <nexusUrl>https://s01.oss.sonatype.org/</nexusUrl>
                    <autoReleaseAfterClose>true</autoReleaseAfterClose>
                    <stagingProgressTimeoutMinutes>15</stagingProgressTimeoutMinutes>
                </configuration>
            </plugin>
        </plugins>
    </build>
    <reporting>
        <excludeDefaults>true</excludeDefaults>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>${mavenProjectInfoReportsVersion}</version>
            </plugin>
        </plugins>
    </reporting>
</project>
